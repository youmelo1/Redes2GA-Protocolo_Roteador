# docker-compose.yml

networks:
  roteamento-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

services:
  r1:
    build: .
    container_name: r1
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.101
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r1.json

  r2:
    build: .
    container_name: r2
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.102
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r2.json

  r3:
    build: .
    container_name: r3
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.103
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r3.json
  
  r4:
    build: .
    container_name: r4
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.104
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r4.json

  r5:
    build: .
    container_name: r5
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.105
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r5.json

  r6:
    build: .
    container_name: r6
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.106
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r6.json

  r7:
    build: .
    container_name: r7
    networks:
      roteamento-net:
        ipv4_address: 172.28.0.107
    cap_add:
      - NET_ADMIN
    command: python simple_router.py --config configs/config_r7.json